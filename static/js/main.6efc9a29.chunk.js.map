{"version":3,"sources":["Firebase.jsx","App.jsx","serviceWorker.js","components/Edit.jsx","components/Create.jsx","components/Show.jsx","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","boards","forEach","doc","_doc$data","data","title","description","author","push","key","id","setState","ref","firestore","collection","unsubscribe","state","onSnapshot","obj","toConsumableArray","react_default","a","createElement","class","Link","to","length","map","board","concat","Component","Boolean","window","location","hostname","match","Edit","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","set","then","history","params","catch","error","console","_this2","get","exists","log","for","type","placeholder","Create","add","_this$state2","cols","rows","Show","isLoading","_this3","delete","onClick","bind","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6efc9a29.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/firestore'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyC__krPERqWyfdJySctSFSm5wGBojlcKmw\",\r\n    authDomain: \"board-5514c.firebaseapp.com\",\r\n    databaseURL: \"https://board-5514c.firebaseio.com\",\r\n    projectId: \"board-5514c\",\r\n    storageBucket: \"board-5514c.appspot.com\",\r\n    messagingSenderId: \"869856398413\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"./Firebase\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection(\"boards\");\n    this.unsubscribe = null;\n    this.state = {\n      boards: [],\n    };\n  }\n\n  onCollectionUpdate = querySnapshot => {\n    const boards = [];\n    querySnapshot.forEach(doc => {\n      const { title, description, author } = doc.data();\n      boards.push({\n        key: doc.id,\n        doc,\n        title,\n        description,\n        author\n      });\n    });\n    this.setState({\n      boards\n    });\n  };\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n\n    const obj = [...this.state.boards];\n\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">BOARD LIST</h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4>\n              <Link to=\"/create\" class=\"btn btn-primary\">\n                Add Board\n              </Link>\n            </h4>\n            {obj.length > 0 && (\n              <table class=\"table table-stripe\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Description</th>\n                    <th>Author</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {obj.map(board => (\n                    <tr>\n                      <td>\n                        <Link to={`/show/${board.key}`}>{board.title}</Link>\n                      </td>\n                      <td>{board.description}</td>\n                      <td>{board.author}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport firebase from \"../Firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      key: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      author: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .firestore()\r\n      .collection(\"boards\")\r\n      .doc(this.props.match.params.id);\r\n    ref.get().then(doc => {\r\n      if (doc.exists) {\r\n        const board = doc.data();\r\n        this.setState({\r\n          key: doc.id,\r\n          title: board.title,\r\n          description: board.description,\r\n          author: board.author\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState({ board: state });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { title, description, author } = this.state;\r\n\r\n    const updateRef = firebase\r\n      .firestore()\r\n      .collection(\"boards\")\r\n      .doc(this.state.key);\r\n    updateRef\r\n      .set({\r\n        title,\r\n        description,\r\n        author\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          key: \"\",\r\n          title: \"\",\r\n          description: \"\",\r\n          author: \"\"\r\n        });\r\n        this.props.history.push(\"/show/\" + this.props.match.params.id);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">EDIT {this.state.title}</h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Title:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"title\"\r\n                  value={this.state.title}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"description\">Description:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Description\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"author\">Author:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"author\"\r\n                  value={this.state.author}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Author\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n              &nbsp;\r\n              <Link to={`/show/${this.state.key}`} class=\"btn btn-danger\">\r\n                Cancel\r\n              </Link>\r\n              &nbsp;\r\n              <Link to=\"/\" class=\"btn btn-primary\">\r\n                Back to board\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../Firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Create extends Component {\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection(\"boards\");\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      author: \"\"\r\n    };\r\n  }\r\n  onChange = e => {\r\n    const state = this.state;\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { title, description, author } = this.state;\r\n\r\n    this.ref\r\n      .add({\r\n        title,\r\n        description,\r\n        author\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          title: \"\",\r\n          description: \"\",\r\n          author: \"\"\r\n        });\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error adding document: \", error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { title, description, author } = this.state;\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">ADD BOARD</h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Title:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Title\"\r\n                />\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"description\">Description:</label>\r\n                <textArea\r\n                  class=\"form-control\"\r\n                  name=\"description\"\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Description\"\r\n                  cols=\"80\"\r\n                  rows=\"3\"\r\n                >\r\n                  {description}\r\n                </textArea>\r\n              </div>\r\n              <div class=\"form-group\">\r\n                <label for=\"author\">Author:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  name=\"author\"\r\n                  value={author}\r\n                  onChange={this.onChange}\r\n                  placeholder=\"Author\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">\r\n                Submit\r\n              </button>\r\n              &nbsp;\r\n              <Link to=\"/\" class=\"btn btn-primary\">Back to board</Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../Firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Show extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: {},\r\n      key: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref = firebase\r\n      .firestore()\r\n      .collection(\"boards\")\r\n      .doc(this.props.match.params.id);\r\n    ref.get().then(doc => {\r\n      if (doc.exists) {\r\n        this.setState({\r\n          board: doc.data(),\r\n          key: doc.id,\r\n          isLoading: false\r\n        });\r\n      } else {\r\n        console.log(\"No such document!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"boards\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        console.log(\"Document successfully deleted!\");\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error removing document: \", error);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h4>\r\n              EDIT {this.state.board.title}\r\n            </h4>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <dl>\r\n              <dt>Title:</dt>\r\n              <dd>{this.state.board.title}</dd>\r\n              <dt>Description:</dt>\r\n              <dd>{this.state.board.description}</dd>\r\n              <dt>Author:</dt>\r\n              <dd>{this.state.board.author}</dd>\r\n            </dl>\r\n            <Link to={`/edit/${this.state.key}`} class=\"btn btn-success\">\r\n              Edit\r\n            </Link>\r\n            &nbsp;\r\n            <button\r\n              onClick={this.delete.bind(this, this.state.key)}\r\n              class=\"btn btn-danger\"\r\n            >\r\n              Delete\r\n            </button>\r\n            &nbsp;\r\n            <Link to=\"/\" class=\"btn btn-primary\">Back to board</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Show;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Edit from \"./components/Edit\";\nimport Create from \"./components/Create\";\nimport Show from \"./components/Show\";\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/edit/:id\" component={Edit} />\n      <Route path=\"/create\" component={Create} />\n      <Route path=\"/show/:id\" component={Show} />\n    </div>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}